
import java.awt.Component;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Random;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nn
 */
public class Menu extends javax.swing.JFrame {

    private final League league;
    private final DefaultListModel<String> listPreviewTeams;

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
        league = new League();
        listPreviewTeams = new DefaultListModel<>();
        jListTeams.setModel(listPreviewTeams);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textFieldTeamName = new javax.swing.JTextField();
        jAddTeam = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListTeams = new javax.swing.JList<>();
        jSimulateMatch = new javax.swing.JButton();
        jDeleteTeam = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPositionTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel1.setText("Table of positions");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 3, 14)); // NOI18N
        jLabel2.setText("Team Name:");
        jLabel2.setToolTipText("");

        textFieldTeamName.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        textFieldTeamName.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jAddTeam.setBackground(new java.awt.Color(51, 255, 0));
        jAddTeam.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jAddTeam.setText("Add Team");
        jAddTeam.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jAddTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddTeam(evt);
            }
        });

        jListTeams.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jListTeams.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jListTeams);
        jListTeams.getAccessibleContext().setAccessibleDescription("");

        jSimulateMatch.setText("Simulate Match");
        jSimulateMatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSimulateMatch(evt);
            }
        });

        jDeleteTeam.setBackground(new java.awt.Color(255, 102, 102));
        jDeleteTeam.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jDeleteTeam.setText("Delete Team");
        jDeleteTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteTeam(evt);
            }
        });

        jPositionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Team Name", "Points Total", "Games Played", "Games Won", "Games Lost", "Goals Scored", "Goals Conceded"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jPositionTable.setAutoscrolls(false);
        jPositionTable.setEnabled(false);
        jPositionTable.setFocusTraversalKeysEnabled(false);
        jPositionTable.setFocusable(false);
        jPositionTable.setRequestFocusEnabled(false);
        jPositionTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jPositionTable);
        if (jPositionTable.getColumnModel().getColumnCount() > 0) {
            jPositionTable.getColumnModel().getColumn(0).setResizable(false);
            jPositionTable.getColumnModel().getColumn(1).setResizable(false);
            jPositionTable.getColumnModel().getColumn(2).setResizable(false);
            jPositionTable.getColumnModel().getColumn(3).setResizable(false);
            jPositionTable.getColumnModel().getColumn(4).setResizable(false);
            jPositionTable.getColumnModel().getColumn(5).setResizable(false);
            jPositionTable.getColumnModel().getColumn(6).setResizable(false);
        }

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel3.setText("Colombian Soccer League");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 923, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(361, 361, 361)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(279, 279, 279)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textFieldTeamName))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jDeleteTeam)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jAddTeam))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(328, 328, 328)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(399, 399, 399)
                        .addComponent(jSimulateMatch)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textFieldTeamName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jDeleteTeam)
                    .addComponent(jAddTeam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSimulateMatch)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jAddTeam(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddTeam
        String teamName = textFieldTeamName.getText();
        teamName = teamName.toUpperCase();

        if (listPreviewTeams.contains(teamName)) {
            JOptionPane.showMessageDialog(this, "El equipo ya existe. Intente con otro nombre", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!teamName.isEmpty()) {
            Team team = new Team(teamName);
            league.addLeagueTeam(team);
            listPreviewTeams.addElement(team.getNameTeam());

            DefaultTableModel model = (DefaultTableModel) jPositionTable.getModel();
            model.addRow(new Object[]{team.getNameTeam(), team.getPointsTotal(), team.getGamesPlayed(), team.getGamesWon(), team.getGamesLost(), team.getGoalsScored(), team.getGoalsConceded()});

            JOptionPane.showMessageDialog(this, "Equipo agregado exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Por favor ingrese el nombre del equipo.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jAddTeam

    private void jSimulateMatch(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSimulateMatch
        List<Team> lstTeams = league.getLstTeams();
        int numTeams = lstTeams.size();

        if (numTeams < 2) {
            JOptionPane.showMessageDialog(this, "Se necesitan al menos dos equipos para hacer la simulacion.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        for (int i = 0; i < lstTeams.size(); i++) {
            Team teamOne = lstTeams.get(i);
            for (int x = 0; x < lstTeams.size(); x++) {
                Team teamTwo = lstTeams.get(x);
                if (teamTwo != teamOne) {
                    //System.out.printf("%s vs %s. %n", teamOne.getNameTeam(), teamTwo.getNameTeam());
                    Match match = new Match(teamOne, teamTwo);
                    match.playMatch(jPositionTable, i, x);
                }
            }
        }

        String winner = (String) jPositionTable.getValueAt(0, 0);
        JOptionPane.showMessageDialog(this, "El ganador equipo ganador es: " + winner, "Resultado del partido", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jSimulateMatch

    private void jDeleteTeam(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteTeam
        int selectedIndex = jListTeams.getSelectedIndex();

        if (selectedIndex != -1) {
            String selectedTeam = listPreviewTeams.getElementAt(selectedIndex);
            listPreviewTeams.removeElementAt(selectedIndex);

            DefaultTableModel model = (DefaultTableModel) jPositionTable.getModel();
            for (int i = 0; i < model.getRowCount(); i++) {
                Object value = model.getValueAt(i, 0);
                if (value != null && value.equals(selectedTeam)) {
                    model.removeRow(i);
                    break;
                }
            }

            JOptionPane.showMessageDialog(this, "Equipo eliminado exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Por favor seleccione un equipo para eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jDeleteTeam

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Menu().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAddTeam;
    private javax.swing.JButton jDeleteTeam;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jListTeams;
    private javax.swing.JTable jPositionTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jSimulateMatch;
    private javax.swing.JTextField textFieldTeamName;
    // End of variables declaration//GEN-END:variables
    
}
